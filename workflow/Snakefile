#! /usr/bin/env python
# -*- coding: utf-8 -*-

from snakemake.utils import min_version

min_version("6.4.1")

configfile: "config/config.yaml"

rule all:
    input:
        'databases/remotefiles/GRCh38.d1.vd1.fa.tar.gz',
        'databases/remotefiles/star.index.genome.d1.vd1.gtfv22.tar.gz'


rule download_remote:
    """ Downloads a remote file and checks the md5sum.
        Filenames, URLs and md5 checksums are configured in the `remotefiles` element of
        the configfile
    """
    output:
        'databases/remotefiles/{f}'
    params:
        url = lambda wildcards: config['remotefiles'][wildcards.f]['url'],
        md5 = lambda wildcards: config['remotefiles'][wildcards.f]['md5']
    shell:
        '''
curl -L {params.url} > {output[0]}
echo {params.md5}  {output[0]} | md5sum -c -
        '''

rule star_index_ncbi38_gencode38:
    input:
        fasta_gz = 'databases/remotefiles/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.gz',
        gtf_gz = 'databases/remotefiles/gencode.v38.annotation.gtf.gz'
    output:
        directory("databases/star_index_ncbiHG38_gencode38")
    params:
        sjdbOverhang = 74
    conda: "envs/star.yaml"
    threads: 8
    shell:
        '''
tdir=$(mktemp -d {config[local_tmp]}/{rule}.XXXXXX)

pigz -dc {input.fasta_gz} > $tdir/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
pigz -dc {input.gtf_gz} > $tdir/gencode.v38.annotation.gtf


STAR\
 --runThreadN {threads}\
 --runMode genomeGenerate\
 --genomeDir {output}\
 --outFileNamePrefix {output}\
 --genomeFastaFiles $tdir/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna\
 --sjdbGTFfile $tdir/gencode.v38.annotation.gtf\
 --sjdbOverhang {params.sjdbOverhang}
        '''
